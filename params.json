{"name":"Bearcat-dao","tagline":"an O/R mapping dao framework","body":"## Bearcat-dao -- an O/R mapping dao framework  \r\nBearcat-dao is an O/R mapping dao framework which provides O/R mapping, dao support for [node.js](http://nodejs.org/).  \r\nIt is written by [POJOs](https://github.com/bearcatnode/bearcat/wiki/POJOs-based-development) and can be nicely used with [Bearcat](https://github.com/bearcatnode/bearcat).  \r\n\r\n## Features  \r\n* O/R mapping  \r\n* cacheTemplate  \r\n* sqlTemplate  \r\n* transaction  \r\n\r\n## Usage\r\n### Domain Definition\r\nDomain is a POJO, express the relationship between table and object  \r\n```\r\nvar simpleDomain = function() {\r\n\tthis.id = 0;\r\n\tthis.name = null;\r\n}\r\n\r\nmodule.exports = {\r\n\tfunc: Domain,\r\n\tprimary: [{\r\n\t\tname: \"id\",\r\n\t\ttype: \"Long\"\r\n\t}],\r\n\tfields: [\"name\"],\r\n\ttableName: \"test\"\r\n}\r\n```\r\n\r\nmore in details:  \r\n* func : constructor function for the domain object\r\n* primary : an array defines primary fields  \r\n* fields : an array defines fields except primary fields  \r\n  - field can be defined by object with ***name***, ***type*** properties, or simply by name string  \r\n* tableName : the name of table to be mapped by the ORM object  \r\n* key : the cached key for conjunctive query domain definition  \r\n\r\n### Add to project\r\n```\r\nnpm install bearcat-dao --save\r\n```  \r\n\r\nadd beanDefinition to context.json used by your project  \r\n[placeholds](https://github.com/bearcatnode/bearcat/wiki/Consistent-configuration) can be nicely used to switch between contexts  \r\n\r\n```\r\n\"beans\": [{\r\n\t\t\"id\": \"mysqlConnectionManager\",\r\n\t\t\"func\": \"node_modules.bearcat-dao.lib.connection.sql.mysqlConnectionManager\",\r\n\t\t\"props\": [{\r\n\t\t\t\"name\": \"port\",\r\n\t\t\t\"value\": \"${mysql.port}\"\r\n\t\t}, {\r\n\t\t\t\"name\": \"host\",\r\n\t\t\t\"value\": \"${mysql.host}\"\r\n\t\t}, {\r\n\t\t\t\"name\": \"user\",\r\n\t\t\t\"value\": \"${mysql.user}\"\r\n\t\t}, {\r\n\t\t\t\"name\": \"password\",\r\n\t\t\t\"value\": \"${mysql.password}\"\r\n\t\t}, {\r\n\t\t\t\"name\": \"database\",\r\n\t\t\t\"value\": \"${mysql.database}\"\r\n\t\t}]\r\n\t}, {\r\n\t\t\"id\": \"redisConnectionManager\",\r\n\t\t\"func\": \"node_modules.bearcat-dao.lib.connection.cache.redisConnectionManager\",\r\n\t\t\"props\": [{\r\n\t\t\t\"name\": \"port\",\r\n\t\t\t\"value\": \"${redis.port}\"\r\n\t\t}, {\r\n\t\t\t\"name\": \"host\",\r\n\t\t\t\"value\": \"${redis.host}\"\r\n\t\t}]\r\n\t}]\r\n```\r\n\r\nif you do not use redis, you can remove ***redisConnectionManager*** definition  \r\n\r\n### Write daos  \r\nBearcat-dao provides ***domainDaoSupport*** wrapping basic sql and cache operations  \r\nadd it with properties dependency injection, and init it by invoking ***initConfig*** method  \r\nthen you can use domainDaoSupport convenient methods to wrap your own daos  \r\n\r\nsimpleDao.js\r\n```\r\nvar SimpleDomain = require('simpleDomain');\r\nvar SimpleDao = function() {\r\n\tthis.domainDaoSupport = null;\r\n}\r\n\r\nSimpleDao.prototype.init = function() {\r\n\t// init with SimpleDomain to set up O/R mapping\r\n\tthis.domainDaoSupport.initConfig(SimpleDomain);\r\n}\r\n\r\n// query list all\r\n// callback return mapped SimpleDomain array results\r\nSimpleDao.prototype.getList = function(cb) {\r\n\tvar sql = ' 1 = 1';\r\n\treturn this.domainDaoSupport.getListByWhere(sql, null, null, cb);\r\n}\r\n\r\nmodule.exports = {\r\n\tid: \"simpleDao\",\r\n\tfunc: SimpleDao,\r\n\tprops: [{\r\n\t\tname: \"domainDaoSupport\",\r\n\t\tref: \"domainDaoSupport\"\r\n\t}],\r\n\t\"init\": \"init\"\r\n}\r\n```\r\n\r\n## License\r\n\r\n(The MIT License)\r\n\r\nCopyright (c) fantasyni and other contributors\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining\r\na copy of this software and associated documentation files (the\r\n'Software'), to deal in the Software without restriction, including\r\nwithout limitation the rights to use, copy, modify, merge, publish,\r\ndistribute, sublicense, and/or sell copies of the Software, and to\r\npermit persons to whom the Software is furnished to do so, subject to\r\nthe following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be\r\nincluded in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}